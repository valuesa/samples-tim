package cn.boxfish.thinking.concurrent21.performance;

/**
 * Created by LuoLiBing on 16/11/22.
 * 并发基础知识
 * 1 可以运行多个独立的任务
 * 2 必须考虑当这些任务关闭时,可能出现的所有问题
 * 3 任务可能会在共享资源上彼此干涉.互斥(锁)是用来防止这种冲突的基本工具
 * 4 如果任务设计得不够仔细,就又可能会死锁
 *
 * 什么时候使用并发,什么时候应该避免死锁
 * 1 要处理很多任务,他们交织在一起,应用并发能够更有效的使用计算机
 * 2 要能够更好地阻止代码
 * 3 要更便于用户使用
 *
 * 多线程的主要缺陷
 * 1 等待共享资源的时候性能降低
 * 2 需要处理线程的额外cpu花费
 * 3 糟糕的程序设计导致不必要的复杂度
 * 4 有可能产生一些病态行文,例如饿死,竞争,死锁和活锁
 * 5 不同平台导致的不一致性
 *
 */
public class Summary {
}
